// Generated by `wit-bindgen` 0.32.0. DO NOT EDIT!
#ifndef __BINDINGS_IMPORTS_H
#define __BINDINGS_IMPORTS_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

typedef struct imports_string_t {
  uint8_t*ptr;
  size_t len;
} imports_string_t;

typedef uint8_t wasmvision_platform_config_config_error_t;

// success, all is well.
#define WASMVISION_PLATFORM_CONFIG_CONFIG_ERROR_SUCCESS 0
// The requested key does not exist in the configuration.
#define WASMVISION_PLATFORM_CONFIG_CONFIG_ERROR_NO_SUCH_KEY 1

typedef struct {
  bool is_err;
  union {
    imports_string_t ok;
    wasmvision_platform_config_config_error_t err;
  } val;
} wasmvision_platform_config_result_string_config_error_t;

// HTTP errors returned by the runtime.
typedef uint8_t wasmvision_platform_http_http_error_t;

#define WASMVISION_PLATFORM_HTTP_HTTP_ERROR_SUCCESS 0
#define WASMVISION_PLATFORM_HTTP_HTTP_ERROR_DESTINATION_NOT_ALLOWED 1
#define WASMVISION_PLATFORM_HTTP_HTTP_ERROR_INVALID_URL 2
#define WASMVISION_PLATFORM_HTTP_HTTP_ERROR_REQUEST_ERROR 3
#define WASMVISION_PLATFORM_HTTP_HTTP_ERROR_RUNTIME_ERROR 4
#define WASMVISION_PLATFORM_HTTP_HTTP_ERROR_TOO_MANY_REQUESTS 5

typedef struct {
  uint8_t *ptr;
  size_t len;
} imports_list_u8_t;

typedef struct {
  bool is_err;
  union {
    imports_list_u8_t ok;
    wasmvision_platform_http_http_error_t err;
  } val;
} wasmvision_platform_http_result_list_u8_http_error_t;

// Imported Functions from `wasmvision:platform/time`
// Get the current time in milliseconds since the Unix epoch.
extern uint64_t wasmvision_platform_time_now(void);

// Imported Functions from `wasmvision:platform/logging`
// Log a message on the host.
extern void wasmvision_platform_logging_log(imports_string_t *msg);
// Print a message on the host.
extern void wasmvision_platform_logging_println(imports_string_t *msg);

// Imported Functions from `wasmvision:platform/config`
extern bool wasmvision_platform_config_get_config(imports_string_t *key, imports_string_t *ret, wasmvision_platform_config_config_error_t *err);

// Imported Functions from `wasmvision:platform/http`
// Get the content at the specified URL.
// Returns either the content or an error.
extern bool wasmvision_platform_http_get(imports_string_t *url, imports_list_u8_t *ret, wasmvision_platform_http_http_error_t *err);
// Post the content to the specified URL.
// Returns either the response content or an error.
extern bool wasmvision_platform_http_post(imports_string_t *url, imports_string_t *content_type, imports_list_u8_t *body, imports_list_u8_t *ret, wasmvision_platform_http_http_error_t *err);

// Helper Functions

void wasmvision_platform_config_result_string_config_error_free(wasmvision_platform_config_result_string_config_error_t *ptr);

void imports_list_u8_free(imports_list_u8_t *ptr);

void wasmvision_platform_http_result_list_u8_http_error_free(wasmvision_platform_http_result_list_u8_http_error_t *ptr);

// Transfers ownership of `s` into the string `ret`
void imports_string_set(imports_string_t *ret, const char*s);

// Creates a copy of the input nul-terminate string `s` and
// stores it into the component model string `ret`.
void imports_string_dup(imports_string_t *ret, const char*s);

// Deallocates the string pointed to by `ret`, deallocating
// the memory behind the string.
void imports_string_free(imports_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
